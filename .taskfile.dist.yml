# https://taskfile.dev

version: "3"
silent: true
dotenv:
  - .env

vars:
  NEXT_PATCH_VERSION:
    sh: cz bump --get-next --increment PATCH
  NEXT_MINOR_VERSION:
    sh: cz bump --get-next --increment MINOR
  PROJECT_VERSION:
    sh: cz version -p
  MILESTONE:
    sh: gh milestone list --json title,number --jq ".[]" | rg 'v{{.NEXT_MINOR_VERSION}}' | jq -r ".number"
  MILESTONE_TITLE:
    sh: gh milestone list --json title,number --jq ".[]" | rg 'v{{.NEXT_MINOR_VERSION}}' | jq -r ".title"
  MILESTONE_PROGRESS:
    sh: gh milestone list --json title,progressPercentage --jq ".[]" | rg 'v{{.NEXT_MINOR_VERSION}}' | jq -r ".progressPercentage"

tasks:
  default:
    cmds:
      - echo "{{.VERSION}}"
      - echo "{{.MILESTONE}}"
      - echo "{{.MILESTONE_TITLE}}"
      - echo "{{.MILESTONE_PROGRESS}}"
      - echo "{{.BUMP_INCREMENT}}"
    silent: true

  bump:
    preconditions:
      - sh: goreleaser check
        msg: goreleaser check failed
      - sh: git diff --exit-code
        msg: git state is dirty
    vars:
      BUMP_INCREMENT:
        sh: |
          if [ "{{.MILESTONE_PROGRESS}}" = "100" ]; then
            echo "MINOR"
          else
            echo "PATCH"
          fi
    cmds:
      - defer: rm -rf .env
      - gum spin "Running goreleaser dry build..." -- goreleaser release --snapshot --clean --skip=publish
      - rm -rf dist
      - cz bump --yes --increment {{.BUMP_INCREMENT}} --allow-no-commit
      - task: publish:buf
      - task: publish:docker
      - goreleaser release --clean

  publish:buf:
    internal: true
    dir: proto
    vars:
      VERSION:
        sh: cz version -p
      TAG: v{{.VERSION}}
    cmds:
      - buf build
      - buf push --label {{.TAG}}

  publish:docker:
    internal: true
    vars:
      VERSION:
        sh: cz version -p
    cmds:
      - docker build . -t snrd
      - for:
          matrix:
            HUB: ["ghcr.io/sonr-io", "onsonr"]
            TAG: ["latest", "{{.VERSION}}"]
        cmd: docker tag snrd "{{.ITEM.HUB}}/snrd/{{.ITEM.TAG}}"
      - for:
          matrix:
            HUB: ["ghcr.io/sonr-io", "onsonr"]
            TAG: ["latest", "{{.VERSION}}"]
        cmd: docker push "{{.ITEM.HUB}}/snrd/{{.ITEM.TAG}}"
