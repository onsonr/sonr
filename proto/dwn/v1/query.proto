syntax = "proto3";
package dwn.v1;

import "google/api/annotations.proto";
import "dwn/v1/genesis.proto";

option go_package = "github.com/onsonr/sonr/x/dwn/types";

// ╭─────────────────────────────────────────────────────────╮
// │                  RPC Query Service                      │
// ╰─────────────────────────────────────────────────────────╯

// Query provides defines the gRPC querier service.
service Query {
  // Params queries all parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/vault/v1/params";
  }


  // Allocate initializes a Target Vault available for claims with a compatible
  // Authentication mechanism. The default authentication mechanism is WebAuthn.
  rpc Allocate(QueryAllocateRequest) returns (QueryAllocateResponse) {
    option (google.api.http).get = "/vault/v1/allocate";
  }
}

// ╭──────────────────────────────────────────────────────────╮
// │                  RPC Query Messages                      │
// ╰──────────────────────────────────────────────────────────╯

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1;
}

// QueryAllocateRequest is the request type for the Allocate RPC method.
message QueryAllocateRequest {}

// AllocateResponse is the response type for the Allocate RPC method.
message QueryAllocateResponse {
  bool success = 1;
  string cid = 2;
  string macaroon = 3;
  string public_uri = 4;
  int64 expiry_block = 5;
}

