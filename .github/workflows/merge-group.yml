name: Merge Group

on:
  merge_group:

permissions:
  contents: read # for TimonVS/pr-labeler-action to read config file
  pull-requests: write # for TimonVS/pr-labeler-action to add labels in PR

jobs:
  test-race:
    runs-on: ubuntu-latest
    if: github.event_name == 'merge_group'
    name: Test Race
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: onsonr/sonr
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          check-latest: true
      - run: make test-race

  test-cover:
    runs-on: ubuntu-latest
    if: github.event_name == 'merge_group'
    name: Test Coverage
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: onsonr/sonr
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          check-latest: true
      - run: make test-cover

  validate-tag:
    runs-on: ubuntu-latest
    name: Validate Tag
    if: github.event_name == 'merge_group'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: onsonr/sonr
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          check-latest: true

      - name: Commitizen Dry Run
        id: cz
        uses: commitizen-tools/commitizen-action@master
        with:
          push: false
          dry_run: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: Check if tag exists
        run: |
          DETERMINED_VERSION="${{ steps.cz.outputs.version }}"
          if git ls-remote --tags origin "refs/tags/v${DETERMINED_VERSION}" | grep -q .; then
            echo "::error::Tag v${DETERMINED_VERSION} already exists upstream"
            exit 1
          fi
          echo "Tag v${DETERMINED_VERSION} does not exist - OK to proceed"
