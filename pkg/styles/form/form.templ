package form

import (
	"fmt"
	"github.com/onsonr/sonr/pkg/styles/layout"
)

// Form is a standard form styled like a card
templ Form(action string, method string) {
	<sl-card>
		<form action={ templ.SafeURL(action) } method={ method } class="gap-4">
			{ children... }
		</form>
	</sl-card>
}

templ NameInput() {
	@layout.Rows() {
		<sl-input name="first_name" placeholder="John" type="text" label="First Name" required autofocus></sl-input>
		<sl-input name="last_name" placeholder="Doe" type="text" label="Last Name"></sl-input>
	}
}

templ HandleInput() {
	<sl-input name="handle" placeholder="@johndoe" type="text" label="Handle" minlength="4" maxlength="12" required></sl-input>
}

templ CodeInput(id string) {
	<sl-input id={ id } placeholder="●" type="text" maxlength="1" pill class="w-min"></sl-input>
}

// Hidden input and button which calls a javascript function to generate a passkey
templ PasskeyInput(id string) {
	@CredentialsScripts()
	<sl-button type="submit" outline>
		<sl-icon slot="prefix" class="text-neutral-500" library="sonr" name="passkey"></sl-icon>
		Create PassKey
	</sl-button>
}

templ Submit(text string) {
	<sl-button type="submit" outline>
		{ text }
	</sl-button>
}

templ ProgressBar(progress string) {
	<div class="max-w-md w-full">
		<sl-progress-bar value={ progress }></sl-progress-bar>
	</div>
}

func getValue(first, second int) string {
	if first == 0 && second == 0 {
		return "0"
	}
	perceent := first / second
	if perceent > 100 {
		return "100"
	}
	return fmt.Sprintf("%d", perceent)
}
