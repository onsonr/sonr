package layout

import "fmt"

const (
	PublicOrigin = "https://cdn.sonr.id"
)

var (
	stylesHandle = templ.NewOnceHandle()
	alpineHandle = templ.NewOnceHandle()
	dexieHandle  = templ.NewOnceHandle()
	htmxHandle   = templ.NewOnceHandle()
)

templ Nebula(version string) {
	<link
		rel="stylesheet"
		media="(prefers-color-scheme:light)"
		href={ jsDelivrURL("@onsonr/nebula", version, "cdn/themes/light.css") }
	/>
	<link
		rel="stylesheet"
		media="(prefers-color-scheme:dark)"
		href={ jsDelivrURL("@onsonr/nebula", version, "cdn/themes/dark.css") }
		onload="document.documentElement.classList.add('sl-theme-dark');"
	/>
	<script type="module" src={ jsDelivrURL("@onsonr/nebula", version, "cdn/shoelace-autoloader.js") }></script>
}

templ Tailwind() {
	<script src="https://cdn.tailwindcss.com?plugins=typography,aspect-ratio,line-clamp,container-queries"></script>
	<script src="https://kit.fontawesome.com/9909219bb5.js" crossorigin="anonymous"></script>
}

templ Turnstile() {
	<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>
}

templ Alpine() {
	<script src={ jsDelivrURL("alpinejs", "3.14.6", "dist/cdn.min.js") }></script>
	<script src={ jsDelivrURL("@alpinejs/focus", "3.14.6", "dist/cdn.min.js") }></script>
}

templ Dexie() {
	<script src={ jsDelivrURL("dexie", "4.0.10", "dist/dexie.min.js") }></script>
	<script src={ jsDelivrURL("dexie-export-import", "4.1.4", "dist/dexie-export-import.min.js") }></script>
}

templ Htmx() {
	<script src={ jsDelivrURL("htmx.org", "1.9.12", "dist/htmx.min.js") }></script>
	<script src={ jsDelivrURL("htmx-ext-include-vals", "2.0.0", "include-vals.min.js") }></script>
	<script src={ jsDelivrURL("htmx-ext-path-params", "2.0.0", "path-params.min.js") }></script>
	<script src={ jsDelivrURL("htmx-ext-alpine-morph", "2.0.0", "alpine-morph.min.js") }></script>
}

func jsDelivrURL(pkg string, version string, path string) string {
	return fmt.Sprintf("https://cdn.jsdelivr.net/npm/%s@%s/%s", pkg, version, path)
}
