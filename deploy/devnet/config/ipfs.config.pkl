import "https://pkl.sh/ipfs.net/0.0.1/Config.pkl"

API {
  HTTPHeaders {
    `Access-Control-Allow-Origin` = new { "*" }
  }
}

Addresses {
  API = "/ip4/127.0.0.1/tcp/5001"
  Gateway = "/ip4/127.0.0.1/tcp/8080"
  Swarm = new {
    "/ip4/0.0.0.0/tcp/4001"
    "/ip6/::/tcp/4001"
    "/ip4/0.0.0.0/udp/4001/quic"
    "/ip6/::/udp/4001/quic"
  }
}

Bootstrap {
  "/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa"
  "/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb"
  "/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt"
  "/ip4/104.131.131.82/tcp/4001/p2p/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ"
  "/ip4/104.131.131.82/udp/4001/quic/p2p/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ"
  "/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN"
}

Datastore {
  BloomFilterSize = 0
  GCPeriod = "1h"
  HashOnRead = false
  StorageGCWatermark = 90
  StorageMax = "10GB"
  Spec = new {
    mounts = new {
      new {
        prefix = "flatfs.datastore"
        child = new {
          path = "blocks"
          shardFunc = "/repo/flatfs/shard/v1/next-to-last/2"
          type = "flatfs"
          sync = true
        }
        mountpoint = "/blocks"
        type = "measure"
      }
      new {
        prefix = "leveldb.datastore"
        child = new {
          compression = "none"
          path = "datastore"
          type = "levelds"
        }
        mountpoint = "/"
        type = "measure"
      }
    }
    type = "mount"
  }
}

Discovery {
  MDNS = new {
    Enabled = true
  }
}

Experimental {
  StrategicProviding = false
  UrlstoreEnabled = false
  AcceleratedDHTClient = false
  GraphsyncEnabled = false
  FilestoreEnabled = false
  Libp2pStreamMounting = false
  P2pHttpProxy = false
}

Gateway {
  HTTPHeaders = new {
    `Access-Control-Allow-Headers` = new {
      "X-Requested-With"
      "Range"
      "User-Agent"
    } 
    `Access-Control-Allow-Methods` = new { "GET" }
    `Access-Control-Allow-Origin` = new { "*" }
  }
  NoDNSLink = false
  NoFetch = false
  PublicGateways = null
  RootRedirect = ""
  Writable = false
}

Identity {
  PrivKey = "CAESQP0FRhYf5Nvxg0wrbN+VTK7kWdgy+3AKoxU3vNH0K9FHVpXyx6/mHKyCaPjqI11YsHUW0B2ZODGROPafyS6IeWY="
  PeerID = "12D3KooWFeMr1tHFs8WAF11rKDULJbmKg9rE5aVhYJU23oC7pqjB"
}

Ipns {
  RecordLifetime = ""
  RepublishPeriod = ""
  ResolveCacheSize = 128
}

Migration  {
  Keep = ""
}

Mounts {
  IPNS = "/ipns"
  FuseAllowOther = false
  IPFS = "/ipfs"
}

Peering {
  Peers = new {
    new {
      Addrs = new { "/dnsaddr/node-1.ingress.cloudflare-ipfs.com" }
      ID = "QmcFf2FH3CEgTNHeMRGhN7HNHU1EXAxoEk6EFuSyXCsvRE"
    }
    new {
      Addrs =  new { "/dnsaddr/node-2.ingress.cloudflare-ipfs.com" }
      ID = "QmcFmLd5ySfk2WZuJ1mfSWLDjdmHZq7rSAua4GoeSQfs1z"
    }
  } 
}

Provider {
  Strategy = ""
}

Pubsub {
  Router = ""
  DisableSigning = false
}

Reprovider {
  Strategy = "all"
  Interval = "12h"
}

Routing {
  Methods = null
  Routers = null
  Type = "dht"
}

Swarm {
  AddrFilters = null
  DisableBandwidthMetrics = false
  DisableNatPortMap = false
}
